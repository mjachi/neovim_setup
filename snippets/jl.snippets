# Functions
snippet fun function definition
	function ${1}(${2}::${3},)
		${0}
	end

snippet ret return
	return(${0})

# Types
snippet ss struct
	struct ${1}
		${2}::${3}
	end
	${0}

snippet ms mutable struct
	mutable struct ${1}
		${2}::${3}
	end
	${0}

snippet un Union for Nullable/ Optional
	${1} = Union{${2}, Nothing}

# Modules
snippet mod Module
	module ${1}

	export ${0}

	end

snippet mods Module w struct
	module ${1}

	export ${1},

	struct ${1}
		${2}::${3}
	end

	${0}

	end

snippet modn Module, no export
	module ${1}

	${0}

	end

# Loops
snippet forc For loop iterating over iterable container
	for ${1} in ${2}
		${0}
	end

snippet for Standard for loop
	for ${1} = ${2}
		${0}
	end

snippet fornest Nested for loop
	for ${1} = ${2}, ${3} = ${4}
		${0}
	end

snippet wh While loop
	while ${1} ${2:<=} ${3}
		${0}
	end

# Conditionals
snippet if if statement
	if ${1}
		${0}
	end

snippet el else part of statement
	else
		${0}

snippet eif else if part of if statement
	else if ${1}
		${0}

snippet ife full if-else statement
	if ${1}
		${2}
	else
		${0}
	end

snippet tern ternary operator
	${1} ? ${2} : ${3:nothing}

# Exceptions
snippet try try catch
	try
		${1:${VISUAL}}
	catch ${2}
		${0}
	end

snippet fin finally statement
	finally
		${0}

snippet thr throw
	throw(${1})
	${0}

# Messages
snippet @i
	@info "${1}" ${0}

snippet @w
	@warn "${1}" ${0}

snippet @e
	@error "${1}" ${0}

snippet @d
	@debug "${1}" ${0}

snippet @t @testset with @test
	@testset "${1}" begin
		${2}
		@test ${0}
	end

snippet @tt @testset with @test_throws
	@testset "${1}" begin
		${2}
		@test_throws ${0}
	end

# Generic

snippet cc Generic function call
	${1}({$2})

snippet mc Generic module function call
	${1}.${2}(${3})


snippet :: Typehint dec... e.g. parameters in struct, function
	${1}::${2}
